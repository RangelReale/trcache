// Code generated by troptgen. DO NOT EDIT.

package refresh

import trcache "github.com/RangelReale/trcache"

type rootOptionsImpl[K comparable, V any, RD any] struct {
	callDefaultRefreshOptions []trcache.RefreshOption
	defaultRefreshFunc        trcache.CacheRefreshFunc[K, V, RD]
	metricsMetrics            trcache.Metrics
	metricsName               string
}

var _ options[string, string, string] = &rootOptionsImpl[string, string, string]{}

func (o *rootOptionsImpl[K, V, RD]) OptCallDefaultRefreshOptions(options ...trcache.RefreshOption) {
	o.callDefaultRefreshOptions = options
}
func (o *rootOptionsImpl[K, V, RD]) OptDefaultRefreshFunc(refreshFunc trcache.CacheRefreshFunc[K, V, RD]) {
	o.defaultRefreshFunc = refreshFunc
}
func (o *rootOptionsImpl[K, V, RD]) OptMetrics(metrics trcache.Metrics, name string) {
	o.metricsMetrics = metrics
	o.metricsName = name
}

type refreshOptionsImpl[K comparable, V any, RD any] struct {
	data       RD
	funcx      trcache.CacheRefreshFunc[K, V, RD]
	getOptions []trcache.GetOption
	setOptions []trcache.SetOption
}

var _ refreshOptions[string, string, string] = &refreshOptionsImpl[string, string, string]{}

func (o *refreshOptionsImpl[K, V, RD]) OptData(data RD) {
	o.data = data
}
func (o *refreshOptionsImpl[K, V, RD]) OptFunc(refreshFunc trcache.CacheRefreshFunc[K, V, RD]) {
	o.funcx = refreshFunc
}
func (o *refreshOptionsImpl[K, V, RD]) OptGetOptions(options ...trcache.GetOption) {
	o.getOptions = options
}
func (o *refreshOptionsImpl[K, V, RD]) OptSetOptions(options ...trcache.SetOption) {
	o.setOptions = options
}
